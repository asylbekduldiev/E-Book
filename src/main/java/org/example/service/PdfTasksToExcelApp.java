package org.example.service;import javafx.application.Application;import javafx.stage.FileChooser;import javafx.stage.Stage;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.layout.VBox;import org.apache.pdfbox.pdmodel.PDDocument;import org.apache.pdfbox.text.PDFTextStripper;import org.apache.poi.ss.usermodel.*;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import java.io.File;import java.io.FileOutputStream;import java.util.*;import java.util.regex.Matcher;import java.util.regex.Pattern;public class PdfTasksToExcelApp extends Application {    @Override    public void start(Stage stage) {        Button btn = new Button("Конвертировать PDF в Excel");        btn.setOnAction(e -> {            try {                // Выбор PDF файла                File pdfFile = new File("src/main/resources/tasks.pdf"); // или путь к твоему PDF                if (!pdfFile.exists()) {                    System.err.println("PDF не найден: " + pdfFile.getAbsolutePath());                    return;                }                // Читаем PDF                PDDocument document = PDDocument.load(pdfFile);                PDFTextStripper stripper = new PDFTextStripper();                String text = stripper.getText(document);                document.close();                // Находим задачи по шаблону "1.1 Название"                Pattern taskPattern = Pattern.compile("(\\d+\\.\\d+)\\s+([^\n]+)");                Matcher matcher = taskPattern.matcher(text);                Map<String, String> tasks = new LinkedHashMap<>();                List<Integer> startIndexes = new ArrayList<>();                List<String> taskKeys = new ArrayList<>();                while (matcher.find()) {                    startIndexes.add(matcher.start());                    taskKeys.add(matcher.group(1) + " " + matcher.group(2));                }                startIndexes.add(text.length());                for (int i = 0; i < taskKeys.size(); i++) {                    String title = taskKeys.get(i);                    int start = startIndexes.get(i);                    int end = startIndexes.get(i + 1);                    String taskBody = text.substring(start, end).trim();                    tasks.put(title, taskBody);                }                // Создаём Excel                Workbook workbook = new XSSFWorkbook();                for (Map.Entry<String, String> entry : tasks.entrySet()) {                    String title = entry.getKey();                    String body = entry.getValue();                    Sheet sheet = workbook.createSheet(title.length() > 31 ? title.substring(0, 31) : title);                    int rowNum = 0;                    // Первая строка — заголовок                    Row titleRow = sheet.createRow(rowNum++);                    titleRow.createCell(0).setCellValue(title);                    // Остальное — таблица                    String[] lines = body.split("\n");                    for (String line : lines) {                        Row row = sheet.createRow(rowNum++);                        String[] columns = line.trim().split("\\s{2,}|\t");                        for (int i = 0; i < columns.length; i++) {                            row.createCell(i).setCellValue(columns[i].trim());                        }                    }                    // Автоширина                    for (int i = 0; i < sheet.getRow(0).getPhysicalNumberOfCells(); i++) {                        sheet.autoSizeColumn(i);                    }                }                // Сохраняем Excel                FileChooser saveChooser = new FileChooser();                saveChooser.setTitle("Сохранить Excel");                saveChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("Excel Files", "*.xlsx"));                File saveFile = saveChooser.showSaveDialog(stage);                if (saveFile != null) {                    try (FileOutputStream fos = new FileOutputStream(saveFile)) {                        workbook.write(fos);                    }                    workbook.close();                    System.out.println("✅ Excel сохранён: " + saveFile.getAbsolutePath());                }            } catch (Exception ex) {                ex.printStackTrace();            }        });        VBox root = new VBox(10, btn);        stage.setScene(new Scene(root, 300, 150));        stage.setTitle("PDF → Excel (30 задач)");        stage.show();    }    public static void main(String[] args) {        launch(args);    }}